Before:
  call ale#assert#SetUpFixerTest('javascript', 'xo')
  runtime autoload/ale/handlers/xo.vim
  set filetype=javascript

After:
  call ale#assert#TearDownFixerTest()

Execute(The xo callback should return the correct default values):
  call ale#test#SetFilename('../eslint-test-files/react-app/subdir/testfile.js')

  AssertFixer
  \ {
  \   'read_temporary_file': 1,
  \   'command': (has('win32') ? 'node.exe ' : '')
  \     . ale#Escape(ale#path#Simplify(g:dir . '/../eslint-test-files/react-app/node_modules/xo/cli.js'))
  \     . ' --fix %t',
  \ }

Execute(The xo callback should include custom xo options):
  let g:ale_javascript_xo_options = '--space'
  call ale#test#SetFilename('../eslint-test-files/react-app/subdir/testfile.js')

  AssertFixer
  \ {
  \   'read_temporary_file': 1,
  \   'command': (has('win32') ? 'node.exe ' : '')
  \     . ale#Escape(ale#path#Simplify(g:dir . '/../eslint-test-files/react-app/node_modules/xo/cli.js'))
  \     . ' --fix %t'
  \     . ' --space',
  \ }

Execute(--stdin should be used when xo is new enough):
  let g:ale_javascript_xo_options = '--space'
  call ale#test#SetFilename('../eslint-test-files/react-app/subdir/testfile.js')

  GivenCommandOutput ['0.30.0']
  AssertFixer
  \ {
  \   'command': ale#path#CdString(ale#path#Simplify(g:dir . '/../eslint-test-files'))
  \     . (has('win32') ? 'node.exe ' : '')
  \     . ale#Escape(ale#path#Simplify(g:dir . '/../eslint-test-files/react-app/node_modules/xo/cli.js'))
  \     . ' --stdin --stdin-filename %s'
  \     . ' --fix'
  \     . ' --space',
  \ }
